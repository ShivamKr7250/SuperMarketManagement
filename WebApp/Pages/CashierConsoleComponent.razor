@page "/cashier_console"

@attribute [Authorize(Policy = "CashierOnly")]

@if(!string.IsNullOrWhiteSpace(cashierName))
{
    <div class="row">
        <div class="col-7"><h3>Cashier`s Console</h3></div>
        <div class="col-2"><label for="cashier">Cashier Name:</label></div>
        <div class="col-3">
            <div class="form-group">
                <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
            </div>
        </div>
    </div>

    <br />
    <div>
        <div class="row">
            <div class="col-4">
                <SelectProductForSellingComponent OnProdutSelected="SelectProduct"></SelectProductForSellingComponent>
                <br />
                <SellProductComponent CashierName="@cashierName" SelectedProduct="selectedProduct" OnProductSold="SellProduct"></SellProductComponent>
            </div>

            <div class="col">
                <br/>
                <TodayTransactionComponent @ref="transactionComponent"></TodayTransactionComponent>
            </div>
        </div>
    </div>
}


@code {
    private TodayTransactionComponent transactionComponent;

    private Product selectedProduct;

    private string cashierName;

    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }

    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        cashierName = authState.User.Identity.Name;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            transactionComponent.LoadTransactions(cashierName);
        }
    }

    private void SelectProduct(Product product)
    {
        selectedProduct = product;
    }

    private void SellProduct(Product product)
    {
        transactionComponent.LoadTransactions(cashierName);
    }
}
